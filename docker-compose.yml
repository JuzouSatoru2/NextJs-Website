version: '3'
services:
  nextjs:
    build: ./
    restart: always
    depends_on:
      - mongo
    ports:
      - 3000:3000
    container_name: frontend
  portainer:
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9000:9000
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    container_name: portainer
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - '27017-27019:27017-27019'
    container_name: mongodb
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_BASICAUTH_USERNAME: alex
      ME_CONFIG_BASICAUTH_PASSWORD: admin
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_SITE_BASEURL: /api/mongoadmin/
    container_name: mongodb_dashboard
  postgresql:
    image: 'bitnami/postgresql:latest'
    restart: always
    ports:
      - '5432:5432'
    environment:
      - POSTGRESQL_USERNAME=root
      - POSTGRESQL_PASSWORD=svfsck2
      - POSTGRESQL_DATABASE=hangfire
    volumes:
      - pgdata:/bitnami
    container_name: hangfire_db
  hangui:
    image: hangui
    restart: always
    build:
      context: ./services/hangfire
      dockerfile: ./Hangfire.UI/Dockerfile
    ports:
      - '5005:80'
    depends_on:
      - postgresql
    container_name: hangfire_ui
  hangserver:
    image: hangserver
    restart: always
    build:
      context: ./services/hangfire
      dockerfile: ./Hangfire.Server/Dockerfile
    depends_on:
      - postgresql
      - hangui
    container_name: hangfire_server
  nginx:
    build: ./services/nginx
    restart: always
    depends_on:
      - nextjs
      - hangserver
      - hangui
    ports:
      - 80:80
    container_name: webserver

volumes:
  portainer_data:
  pgdata:
